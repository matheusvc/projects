#!/usr/bin/env python
import time
import serial
import tkinter as tk
from tkinter import ttk
import threading

ser = serial.Serial(
              
    port='/dev/ttyUSB0',
    baudrate = 19200,
    parity=serial.PARITY_NONE,
    stopbits=serial.STOPBITS_ONE,
    bytesize=serial.EIGHTBITS,
    timeout=1
    )

class MyThread(threading.Thread):
    
    def __init__(self):    
        super(MyThread, self).__init__()
        
        
    def run(self):
        
        with lock:
            print('Lock Acquired')
            
            while True:
                if lock.locked() == True:
                    x = ser.readline()
                    y = x.rstrip()
                    z = y.decode('utf-8')
                    print(z)
                    ser.write(str.encode('AT+CSQ\r'))
                    time.sleep(2)
                    if (z.startswith("+CSQ")):
                        a = int(z[5])
                        if a >= 3:
                            print('Qualidade do sinal', z[5], 'é suficiente')
                            lock.release() #Quando sinal é suficiente, há erro com Lock no próximo ciclo do looping (?)
                            time.sleep(10)
                            #read_mt_message()
                        else:
                            print('Buscando Sinal...')
                            time.sleep(0.5)
                else:
                    lock.acquire()

                    
lock = threading.Lock()
                    
                    
thread = MyThread()
thread.start()
thread.join()
