#!/usr/bin/env python
import sqlite3
import socket
import time
import datetime as dt
import base64
import os
import json
import threading

HOST = ''
PORT = 12999

global s

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.bind((HOST,PORT))

client = []
t = []


def autenticacao():
    
    global data1
    
    user1 = data1[1]
    passwd = data1[2]
    print('Inside Autent = ', user1,passwd)
    
    con = sqlite3.connect('siscompdb')
    c = con.cursor()

    auth = c.execute('SELECT usuario FROM fullinfo WHERE usuario= ? AND password = ?', (user1,passwd))
    if auth.fetchone() is not None:
        word = 'autenticado'
        conn.sendall(word.encode())
    else:
        print('Login ou Senha incorretos')
        worda = 'notautenticado'
        conn.sendall(worda.encode())
        
    con.close()
            
        
def cadastro():
    global user
    print('Cadastro printing data1 = ', data1)
    user = data1[1]
    password = data1[2]
    name = data1[3]
    
    con = sqlite3.connect('siscompdb')
    c1 = con.cursor()

    c1.execute('CREATE TABLE IF NOT EXISTS fullinfo (usuario TEXT, password TEXT, nome TEXT )')
    c1.execute('INSERT INTO fullinfo (usuario, password, nome) VALUES (?,?,?)', (user, password, name))
    con.commit()
    print('Dados Inseridos')
    con.close()


def handler(conn):
    print('Connected to', addr)
    global data1

    while True:
        data = conn.recv(8864)
        data1 = json.loads(data.decode())
        print('Handler printing = ',data1[1], data1[2])
        key = data1[0]
        print(key)
        if (key == 'cadastrar'):
            cadastro()
        elif (key == 'autenticar'):
            autenticacao()
        elif (key == 'img'):
            readimg()
        #elif (key == 'feed'):
     
    
    
def writetodb():
    global thepath
    global hora
    
    con = sqlite3.connect('siscomp')
    c2 = con.cursor()
    
    c2.execute('CREATE TABLE IF NOT EXISTS imagensdb (id INTEGER PRIMARY KEY AUTOINCREMENT, picturepath TEXT, timestamp TEXT )')
    c2.execute('INSERT INTO imagensdb (picturepath,timestamp) VALUES (?,?)' , (thepath,hora))
    con.commit()
    
    
    
i = 0

def readimg():
    while True:
        dado = conn.recv(8864).decode('utf-8')
        if not dado:
            break
        print('data recv = ', dado)
        archive = base64.b64decode(dado)
        print('archive = ', archive)
        name = 'imagem'+numba+'.jpeg'
        with open(name, "wb") as image_file:
            image_file.write(archive)
        thepath = str(os.getcwd()+'/'+name)
        hora = str(dt.datetime.now().strftime('%H:%M:%S'))
        writetodb()
    

while True:
    s.listen(1)
    conn, addr = s.accept()
    print('Conectado com', addr[0],':', str(addr[1]))
    thr = threading.Thread(target = handler, args = (conn,))
    thr.start()
    thr.join()

#def writetodb():
    #global thepath
    #global hora
    
    #con = sqlite3.connect('testedb')
    #c = con.cursor()
    
    #c.execute('CREATE TABLE IF NOT EXISTS imagensdb (id INTEGER PRIMARY KEY AUTOINCREMENT, picturepath TEXT, timestamp TEXT )')
    #c.execute('INSERT INTO imagensdb (picturepath,timestamp) VALUES (?,?)' , (thepath,hora))
    #con.commit()
    #con.close()



    
i = 0

while True:
    numba = str(i)
    data = conn.recv(8864).decode('utf-8')
    if not data:
        break
    print('data recv = ', data)
    archive = base64.b64decode(data)
    print('archive type =', type(archive))
    print('archive = ', archive)
    name = 'imagem'+numba+'.jpeg'
    with open(name, "wb") as image_file:
        image_file.write(archive)
    thepath = str(os.getcwd()+'/'+name)
    hora = str(dt.datetime.now().strftime('%H:%M:%S'))
    writetodb()
    i += 1
